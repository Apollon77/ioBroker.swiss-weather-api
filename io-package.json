{
	"common": {
		"name": "swiss-weather-api",
		"version": "0.9.4",
		"news": {
			"0.9.4": {
				"en": "Bugfix https://github.com/baerengraben/ioBroker.swiss-weather-api/issues/47"
			},
			"0.9.3": {
				"en": "Function Update: Added day_name to identify weekday from \"forecast.day.day0.day_name\" to \"forecast.day.day7.day_name\". Added last_run as Object on swiss-weather-api.0.info.lastrun. Added JsonChart Object on swiss-weather-api.0.forecast.60minutes.day(0-4).JsonChart"
			},
			"0.9.2": {
				"en": "Function Update: The current weather information is provided as a 'Current_Hour' object. Every hour this information is updated. This is done every hour by copying the corresponding values from forecast.day.<current time>. So no new http request will be executed. The values are only copied from the forecast objects. This makes it easier to display the current weather in the visualization."
			},
			"0.9.1": {
				"en": "Minor bugfixing (Handling Adpater State, Handling when no Internet-Connection is available, reduce Rest-Calls."
			},
			"0.9.0": {
				"en": "Update to new SRF Weater API (https://developer.srgssr.ch/apis/srf-weather). Attention: Old Weather-API will be decommissioned on Sept. 2021)"
			},
			"0.3.2": {
				"en": "Fix for https://github.com/baerengraben/iobroker.swiss-weather-api/issues/13"
			},
			"0.3.1": {
				"en": "Adapter-Config attributes longitude & latitude is optional now. If no longitude/latitude is set, the adpater is getting the longitude/latitude from ioBroker System-Attributes."
			},
			"0.3.0": {
				"en": "Change from Scheduled Adapter to Deamon Adapter (https://github.com/baerengraben/iobroker.swiss-weather-api/issues/11). The query interval can now be configured. The adapter no longer terminates and the first query is made 10s after the adapter is started. Attention: For installing this version, please delete the adapter completely and install it again (no update)"
			},
			"0.2.3": {
				"en": "Update Dependencies"
			}
		},
		"title": "Swiss Weather API (SRF Weather)",
		"titleLang": {
			"en": "Swiss Weather API (SRF Weather)",
			"de": "Schweizer Wetter API (SRF Weather)",
			"ru": "Swiss Weather API (SRF Weather)",
			"pt": "API do clima suíço (SRF Weather)",
			"nl": "Swiss Weather API (SRF Weather)",
			"fr": "API Météo Suisse (SRF Weather)",
			"it": "API meteorologica svizzera (SRF Weather)",
			"es": "API meteorológica suiza (SRF Weather)",
			"pl": "Szwajcarski interfejs API pogody (SRF Weather)",
			"zh-cn": "瑞士天气API（SRF Weather）"
		},
		"desc": {
			"en": "Connects to SRF Weather API (https://developer.srgssr.ch/apis/srf-weather)",
			"de": "Stellt eine Verbindung zur SRF-Wetter-API her (https://developer.srgssr.ch/apis/srf-weather)",
			"ru": "Подключается к SRF Weather API (https://developer.srgssr.ch/apis/srf-weather)",
			"pt": "Conecta-se à SRF Weather API (https://developer.srgssr.ch/apis/srf-weather)",
			"nl": "Maakt verbinding met SRF Weather API (https://developer.srgssr.ch/apis/srf-weather)",
			"fr": "Se connecte à l'API Météo SRF (https://developer.srgssr.ch/apis/srf-weather)",
			"it": "Si collega all'API Weather SRF (https://developer.srgssr.ch/apis/srf-weather)",
			"es": "Se conecta a la API meteorológica de SRF (https://developer.srgssr.ch/apis/srf-weather)",
			"pl": "Łączy się z SRF Weather API (https://developer.srgssr.ch/apis/srf-weather)",
			"zh-cn": "连接到SRF Weather API（https://developer.srgssr.ch/apis/srf-weather）"
		},
		"authors": [
			"baerengraben <baerengraben@intelli.ch>"
		],
		"keywords": [
			"SRG-SSR",
			"Weather API",
			"SRF Weather"
		],
		"license": "MIT",
		"platform": "Javascript/Node.js",
		"icon": "swiss-weather-api.png",
		"enabled": true,
		"extIcon": "https://raw.githubusercontent.com/baerengraben/ioBroker.swiss-weather-api/master/admin/swiss-weather-api.png",
		"readme": "https://github.com/baerengraben/ioBroker.swiss-weather-api/blob/master/README.md",
		"loglevel": "info",
		"mode": "daemon",
		"type": "weather",
		"connectionType": "cloud",
		"compact": true,
		"materializeTab": true,
		"materialize": true,
		"dependencies": [
			{
				"js-controller": ">=1.4.2"
			}
		]
	},
	"native": {
		"App_Name": "",
		"ConsumerKey": "",
		"ConsumerSecret": "",
		"Latitude": "",
		"Longitude": "",
		"PollInterval": "30"
	},
	"objects": [],
	"instanceObjects": [
		{
			"_id": "info.connection",
			"type": "state",
			"common": {
				"name": "SRF Weather connected",
				"type": "boolean",
				"role": "indicator.connected",
				"read": true,
				"write": false,
				"def": false,
				"desc": "Is SRF Weather connected?"
			},
			"native": {
			}
		}
	]
}